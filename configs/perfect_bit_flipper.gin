# ==============================================================================
# This automatically sets number of bits for BitFlipper and TrainableBitFlipper
BitFlipper.n_bits = 4
BitFlipper.reward_for_solved = 1
BitFlipper.reward_for_invalid_action = 0

# Parameters for DeterministicMCTSAgent:
# ==============================================================================
DeterministicMCTSAgent.avoid_loops = True
DeterministicMCTSAgent.gamma = 0.99
DeterministicMCTSAgent.n_passes = 10
DeterministicMCTSAgent.value_traits_class = @alpacka.agents.deterministic_mcts.ScalarValueTraits
DeterministicMCTSAgent.value_accumulator_class = @alpacka.agents.deterministic_mcts.EnsembleValueAccumulator
DeterministicMCTSAgent.ensemble_size = 20
DeterministicMCTSAgent.ensemble_mask_size = 10
DeterministicMCTSAgent.render_rollout = False

# Parameters for EnsembleValueAccumulator:
# ==============================================================================
EnsembleValueAccumulator.kappa = 3

# Parameters for EnsembleNetwork:
# ==============================================================================
EnsembleNetwork.network_fn = @KerasNetwork
EnsembleNetwork.n_networks = 20

# Parameters for RMSprop:
# ==============================================================================
RMSprop.lr = 2.5e-4

# Parameters for KerasNetwork:
# ==============================================================================
KerasNetwork.loss = 'mean_squared_error'
KerasNetwork.loss_weights = None
KerasNetwork.metrics = ['mae', 'mse']
KerasNetwork.model_fn = @alpacka.networks.keras.mlp
KerasNetwork.optimizer = @tf.keras.optimizers.RMSprop()
KerasNetwork.train_callbacks = None
KerasNetwork.weight_decay = 0.

# Parameters for LocalBatchStepper:
# ==============================================================================
# None.

# Parameters for mlp:
# ==============================================================================
mlp.hidden_sizes = (50, 50)
mlp.activation = 'relu'
mlp.output_activation = None

# Parameters for Runner:
# ==============================================================================
Runner.agent_class = @alpacka.agents.DeterministicMCTSAgent
Runner.batch_stepper_class = @alpacka.batch_steppers.LocalBatchStepper
Runner.env_class = @alpacka.envs.BitFlipper
Runner.episode_time_limit = 100
Runner.n_envs = 32
Runner.n_epochs = 2000
Runner.n_precollect_epochs = 2
Runner.network_class = @alpacka.networks.EnsembleNetwork
Runner.trainer_class = @alpacka.trainers.SupervisedTrainer
Runner.log_rollout_every_n_epochs = True

# Parameters for ScalarValueAccumulator:
# ==============================================================================
# None.

# Parameters for ScalarValueTraits:
# ==============================================================================
ScalarValueTraits.dead_end_value = -0.2
ScalarValueTraits.avoid_history_coeff = -0.2

# Parameters for SupervisedTrainer:
# ==============================================================================
SupervisedTrainer.batch_size = 32
SupervisedTrainer.n_steps_per_epoch = 64
SupervisedTrainer.replay_buffer_capacity = 10000
SupervisedTrainer.replay_buffer_sampling_hierarchy = ['solved']
SupervisedTrainer.target = @alpacka.trainers.supervised.target_value

# Parameters for target_value:
# ==============================================================================
# None.

# Parameters for RMSprop:
# ==============================================================================
RMSprop.learning_rate = 0.00025
